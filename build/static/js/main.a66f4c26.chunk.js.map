{"version":3,"sources":["components/Header/Header.js","components/Owner/Owner.js","components/Card/Card.js","containers/Feed.js","containers/Question.js","containers/App.js","serviceWorker.js","index.js"],"names":["HeaderWrapper","styled","div","Title","h1","Header","Helmet","name","content","OwnerWrapper","Avatar","img","Name","h3","Owner","data","src","profile_image","display_name","CardWrapper","h2","Meta","Count","Card","title","view_count","answer_count","owner","FeedWrapper","Alert","CardLink","Link","PaginationBar","PaginationLink","Feed","props","query","queryString","parse","location","search","state","page","parseInt","loading","error","fetch","json","dataJSON","this","setState","message","fetchAPI","prevProps","match","items","map","item","to","question_id","url","has_more","Component","QuestionWrapper","Question","params","id","then","res","React","GlobalStyle","createGlobalStyle","AppWrapper","App","exact","path","component","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","hydrate","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a66f4c26.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\n\nconst HeaderWrapper = styled.div`\n  background-color: orange;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`;\n\nconst Title = styled.h1`\n  pointer-events: none;\n`;\n\nconst Header = () => (\n  <>\n    <Helmet>\n      <title>Q&A Feed</title>\n      <meta\n        name=\"description\"\n        content=\"this is a community feed project build with React\"\n      />\n    </Helmet>\n    <HeaderWrapper>\n      <Title>Q&A Feed</Title>\n    </HeaderWrapper>\n  </>\n);\n\nexport default Header;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst OwnerWrapper = styled.div`\n  display: flex;\n  flex-basis: 40%;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nconst Avatar = styled.img`\n  display: block;\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n`;\n\nconst Name = styled.h3`\n  margin-left: 5%;\n`;\n\nconst Owner = ({ data }) => (\n  <OwnerWrapper>\n    <Avatar src={data.profile_image} />\n    <Name>{data.display_name}</Name>\n  </OwnerWrapper>\n);\n\nexport default Owner;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Owner from \"../Owner/Owner\";\n\nconst CardWrapper = styled.div`\n  text-align: left;\n  padding: 1%;\n  background: lightGray;\n  border-radius: 5px;\n  margin-bottom: 2%;\n`;\n\nconst Title = styled.h2`\n  width: 100%;\n  padding-bottom: 10px;\n  text-align: center;\n  border-bottom: 1px solid darkGray;\n`;\n\nconst Meta = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 0 2%;\n`;\n\nconst Count = styled.div`\n  flex-basis: 80%;\n`;\n\nconst Card = ({ data }) => (\n  <CardWrapper>\n    <Title>{data.title}</Title>\n    <Meta>\n      <Count>\n        {`Views: ${data.view_count} | Answers: ${data.answer_count}`}\n      </Count>\n      <Owner data={data.owner} />\n    </Meta>\n  </CardWrapper>\n);\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport Helmet from \"react-helmet\";\nimport Card from \"../components/Card/Card\";\n\nconst FeedWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  margin: 5%;\n`;\n\nconst Alert = styled.div`\n  text-align: center;\n`;\n\nconst CardLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n`;\n\nconst PaginationBar = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst PaginationLink = styled(Link)`\n  padding: 1%;\n  background: lightblue;\n  color: white;\n  text-decoration: none;\n  border-radius: 5%;\n`;\n\nconst ROOT_API = \"https://api.stackexchange.com/2.2/\";\n\nclass Feed extends Component {\n  constructor(props) {\n    super(props);\n    const query = queryString.parse(props.location.search);\n    this.state = {\n      data: [],\n      page: query.page ? parseInt(query.page) : 1,\n      loading: true,\n      error: \"\",\n    };\n  }\n\n  async fetchAPI(page) {\n    try {\n      const data = await fetch(\n        `${ROOT_API}questions?order=desc&sort=activity&tagged=reactjs&site=stackoverflow${\n          page ? `&page=${page}` : \"\"\n        }`\n      );\n      const dataJSON = await data.json();\n\n      if (dataJSON) {\n        this.setState({\n          data: dataJSON,\n          loading: false,\n        });\n      }\n    } catch (error) {\n      this.setState({\n        loading: false,\n        error: error.message,\n      });\n    }\n  }\n\n  componentDidMount() {\n    const { page } = this.state;\n    this.fetchAPI(page);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location.search !== this.props.location.search) {\n      const query = queryString.parse(this.props.location.search);\n      this.setState({ page: parseInt(query.page) }, () =>\n        this.fetchAPI(this.state.page)\n      );\n    }\n  }\n\n  render() {\n    const { data, loading, error, page } = this.state;\n    const { match } = this.props;\n\n    if (loading || error) {\n      return (\n        <>\n          <Helmet>\n            <title>Q&A Feed - Questions</title>\n          </Helmet>\n          <Alert>{loading ? \"Loading...\" : error}</Alert>\n        </>\n      );\n    }\n\n    return (\n      <FeedWrapper>\n        {data.items.map(item => (\n          <CardLink\n            key={item.question_id}\n            to={`/questions/${item.question_id}`}\n          >\n            <Card data={item} />\n          </CardLink>\n        ))}\n\n        <PaginationBar>\n          {page > 1 && (\n            <PaginationLink to={`${match.url}?page=${page - 1}`}>\n              Previous\n            </PaginationLink>\n          )}\n          {data.has_more && (\n            <PaginationLink to={`${match.url}?page=${page + 1}`}>\n              Next\n            </PaginationLink>\n          )}\n        </PaginationBar>\n      </FeedWrapper>\n    );\n  }\n}\n\nexport default Feed;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Card from \"../components/Card/Card\";\n\nconst ROOT_API = \"https://api.stackexchange.com/2.2/\";\n\nconst QuestionWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  margin: 5%;\n`;\n\nconst Alert = styled.div`\n  text-align: center;\n`;\n\nclass Question extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      data: [],\n      loading: true,\n      error: \"\",\n    };\n  }\n\n  componentDidMount() {\n    const { match } = this.props;\n    try {\n      fetch(`${ROOT_API}questions/${match.params.id}?site=stackoverflow`)\n        .then(res => res.json())\n        .then(data => {\n          if (data) {\n            this.setState({\n              data,\n              loading: false,\n            });\n          }\n        });\n    } catch (error) {\n      this.setState({\n        error: error.message,\n        loading: true,\n      });\n    }\n  }\n\n  render() {\n    const { match } = this.props;\n\n    const { data, loading, error } = this.state;\n\n    if (loading || error) {\n      return (\n        <>\n          <Helmet>\n            <title>{`Q&A Feed - Question ${match.params.id}`}</title>\n          </Helmet>\n          <Alert>{loading ? \"Loading...\" : error}</Alert>\n        </>\n      );\n    }\n\n    return (\n      <QuestionWrapper>\n        <Card key={data.items[0].question_id} data={data.items[0]} />\n      </QuestionWrapper>\n    );\n  }\n}\n\nexport default Question;\n","import React, { Component } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"../components/Header/Header\";\nimport Feed from \"./Feed\";\nimport Question from \"../containers/Question\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n      \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`;\n\nconst AppWrapper = styled.div`\n  text-align: center;\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n        <AppWrapper>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={Feed} />\n            <Route path=\"/questions/:id\" component={Question} />\n            <Route path=\"/questions\" component={Feed} />\n          </Switch>\n        </AppWrapper>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.hydrate(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}